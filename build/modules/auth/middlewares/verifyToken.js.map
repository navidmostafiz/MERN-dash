{"version":3,"sources":["../../../../server/modules/auth/middlewares/verifyToken.js"],"names":["verifyToken","req","res","next","token","body","query","headers","verify","get","err","decoded","console","error","status","log","_doc","authUser","Error"],"mappings":";;;;;QAGgBA,W,GAAAA,W;;AAHhB;;;;AACA;;;;;;AAEO,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AAC1C;AACA,MAAIC,QAAQH,IAAII,IAAJ,CAASD,KAAT,IAAkBH,IAAIK,KAAJ,CAAUF,KAA5B,IAAqCH,IAAIM,OAAJ,CAAY,gBAAZ,CAAjD;;AAEA;AACA,MAAIH,KAAJ,EAAW;AACT;AACA,2BAAII,MAAJ,CACEJ,KADF,EAEE,iBAAOK,GAAP,CAAW,YAAX,CAFF,EAGE,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AACtB,UAAID,GAAJ,EAAS;AACPE,gBAAQC,KAAR,CAAc,qBAAd,EAAqCH,GAArC;AACAA,YAAII,MAAJ,GAAa,GAAb;AACA,eAAOX,KAAKO,GAAL,CAAP;AACD;;AAEDE,cAAQG,GAAR,CAAY,gBAAZ,EAA8BJ,QAAQK,IAAtC;;AAEA;AACAf,UAAIgB,QAAJ,GAAeN,QAAQK,IAAvB;AACAb;AACD,KAfH;AAgBD,GAlBD,MAkBO;AACL;AACA;AACA,QAAMO,MAAM,IAAIQ,KAAJ,CAAU,mBAAV,CAAZ;AACAR,QAAII,MAAJ,GAAa,GAAb;AACA,WAAOX,KAAKO,GAAL,CAAP;AACD;AACF","file":"verifyToken.js","sourcesContent":["import config from 'config';\nimport jwt from 'jsonwebtoken';\n\nexport function verifyToken(req, res, next) {\n  // check header or url parameters or post parameters for token\n  var token = req.body.token || req.query.token || req.headers['x-access-token'];\n\n  // decode token\n  if (token) {\n    // verifies secret and checks exp\n    jwt.verify(\n      token,\n      config.get('JWT.SECRET'),\n      function (err, decoded) {\n        if (err) {\n          console.error('verifyToken...err: ', err);\n          err.status = 401;\n          return next(err);\n        }\n\n        console.log('verifyToken...', decoded._doc);\n\n        // if everything is good, save to request for use in other routes\n        req.authUser = decoded._doc;\n        next();\n      });\n  } else {\n    // if there is no token\n    // return an error\n    const err = new Error('No token provided');\n    err.status = 401;\n    return next(err);\n  }\n}\n"]}